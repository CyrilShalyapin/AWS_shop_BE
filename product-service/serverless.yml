service: product-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: dev
  profile: 'sandx'
  environment:
    SNS_ARN:
      Ref: createProductTopic
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:eu-west-1:946235596961:table/products
        - arn:aws:dynamodb:eu-west-1:946235596961:table/stocks
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - arn:aws:sqs:eu-west-1:946235596961:catalogItemsQueue
    - Effect: Allow
      Action:
        - sns:*
      Resource:
        Ref: createProductTopic

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: product/{id}
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: src/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn: arn:aws:sqs:eu-west-1:946235596961:catalogItemsQueue

resources:
  Resources:
    products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    createProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: "kiryl_shaliapin@epam.com"
        Protocol: "email"
        TopicArn:
          Ref: "createProductTopic"
    createProductTopicSubscriptionAlerts: 
        Type: "AWS::SNS::Subscription"
        Properties:
          FilterPolicy:
            status:
              - numeric:
                  - =
                  - 500
          FilterPolicyScope: "MessageBody"
          Endpoint: "kiryl.shaliapin@gmail.com"
          Protocol: "email"
          TopicArn: 
            Ref: "createProductTopic"
        

